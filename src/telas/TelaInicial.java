/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import java.awt.Desktop;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;
import java.awt.Desktop;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.util.ArrayList;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JTextField;
import retriever.TrecDocRetriever;
import retriever.WTDocRetriever;
import trec.Java2sAutoTextField;
import javax.swing.JTextField;
import retriever.TrecDocRetriever;
import retriever.WTDocRetriever;
import trec.Java2sAutoTextField;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.WindowConstants;
import javax.swing.text.JTextComponent;
import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.*;
import java.util.ArrayList;
import javax.swing.*;

public class TelaInicial extends javax.swing.JFrame {
    //private JFrame frame;
    private ArrayList<String> listSomeString = new ArrayList<String>();
    private Java2sAutoTextField someTextField = new Java2sAutoTextField(listSomeString);
    DefaultListModel list = new DefaultListModel();
    static long init;
    static long end;
    static int countQuery=-1;
    static ArrayList<String> queries = new ArrayList<String>();
    static ArrayList<String> documents = new ArrayList<String>();
    StringBuffer docsBuffer = new StringBuffer();
    static ArrayList<String> times = new ArrayList<String>();
    StringBuffer timesBuffer = new StringBuffer();
    static ArrayList<String> docIDs = new ArrayList<String>();
    
    private static TrecDocRetriever searcher;

    /**
     * Creates new form TelaInicial
     */
    public TelaInicial() {
        initComponents();
        //jComboBox1
        ArrayList<String> xusx = new ArrayList<String>();
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(  );
        String log = "log/log.log";BufferedReader br = null;
        try {
        /*BufferedReader */br = new BufferedReader(new FileReader(log));
        
    StringBuilder sb = new StringBuilder();
    String line = br.readLine();

    while (line != null) {
        sb.append(line);
        sb.append(System.lineSeparator());
        line = br.readLine();
        if (model.getIndexOf(line.split("\t")[1]) < 0)
        model.addElement( line.split("\t")[1] );
        xusx.add(line.split("\t")[1] );
    }
    String everything = sb.toString();
} 
        catch(Exception e){}
        finally {
    try {br.close();}
    catch(Exception e){}
        finally {}
}
      //model.addElement( "First" );
      ///model.addElement( "Second" );
      //queryField.setModel( model );
      queryField.setEditable( true );
      JTextComponent aaa = (JTextComponent)queryField;
      org.jdesktop.swingx.autocomplete.AutoCompleteDecorator.decorate(queryField, xusx, false);
      //AutoCompleteDecorator.decorate(queryField );

                listSomeString.add("-");
        listSomeString.add("Snowboarding");
        listSomeString.add("Rowing");
        listSomeString.add("Knitting");
        listSomeString.add("Speed reading");
        listSomeString.add("Pool");
        listSomeString.add("None of the above");

//
        someTextField.setFont(new Font("Serif", Font.BOLD, 16));
        someTextField.setForeground(Color.black);
        someTextField.setBackground(Color.orange);
        someTextField.setName("someTextField");
        someTextField.setDataList(listSomeString);
        
        this.add(someTextField);
        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {
                someTextField.setText("-");
                someTextField.grabFocus();
                someTextField.requestFocus();
                someTextField.setText(someTextField.getText());
                someTextField.selectAll(); 
            }
        });
        ///////////frame.add(someComboBox);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        queryField = new javax.swing.JTextField();
        queryButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        retrieveContainer = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                formAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        queryButton.setText("Buscar");
        queryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryButtonActionPerformed(evt);
            }
        });

        retrieveContainer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                retrieveContainerMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(retrieveContainer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(queryField, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(queryButton)
                        .addGap(0, 304, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(queryButton)
                    .addComponent(queryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void queryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryButtonActionPerformed
        String s = (String)queryField.getText();
        if(!s.isEmpty()){
            
            ArrayList<String[]> links = new ArrayList<String[]>();
            String terms = s;
            if(countQuery > -1){
                documents.set(countQuery, docsBuffer.toString());
                times.set(countQuery, timesBuffer.toString());
                try {
                    searcher.saveLog(queries, documents, times);
                } catch (IOException ex) {
                    Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            setLog();
            queries.set(countQuery, terms);            
            docsBuffer = new StringBuffer();
            timesBuffer = new StringBuffer();
            
            try {
                
                links = searcher.retrieve(terms);
                list.removeAllElements();
                retrieveContainer.setModel(list);
                while(links.size()>0){    
                    String [] aux = links.remove(0);
                    JTextField txt = new JTextField();
                    txt.setText(aux[1]);
                    list.addElement(txt.getText());
                    docIDs.add(aux[2]);
                }
                retrieveContainer.setModel(list);
              
                
            } catch (Exception ex) {
                Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }//GEN-LAST:event_queryButtonActionPerformed

    public void setLog(){
        queries.add("");
        documents.add("");
        times.add("");        
        countQuery++;        
    }
    
    
    private void retrieveContainerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_retrieveContainerMouseClicked
        JList l = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            int index = l.locationToIndex(evt.getPoint());            
            //
            docsBuffer.append(docIDs.get(index)+"\t");
                       
            ViewDocument vd;
            try {
                init = System.currentTimeMillis();
                
                Desktop desk = java.awt.Desktop.getDesktop();   
                try {  
                     desk.browse(new java.net.URI(retrieveContainer.getModel().getElementAt(index).toString()));  
                } catch (Exception e) {  
                     e.printStackTrace();  
                }
                
                vd = new ViewDocument(docIDs.get(index), this, searcher, retrieveContainer.getModel().getElementAt(index).toString()); 
                vd.setVisible(true);
                this.setVisible(false); 
                System.out.println("index: "+index);
            } catch (IOException ex) {
                Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_retrieveContainerMouseClicked

    private void formAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formAncestorMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaInicial().setVisible(true);
            }
        });
        
        if (args.length < 1) {
            args = new String[1];
            args[0] = "wt10g.properties";
        }
        try {
            long start = System.currentTimeMillis();
            searcher = new WTDocRetriever(args[0]);
            long end = System.currentTimeMillis();
            System.out.println("Tempo de Geração do Mapeamento de Links = "+(end-start)+" milissegundos");
                        
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
        
    }
    
    public void setEnd(long time){
        this.end = time;
        timesBuffer.append((end-init)+"\t");
        //search.saveLog();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton queryButton;
    private javax.swing.JTextField queryField;
    private javax.swing.JList retrieveContainer;
    // End of variables declaration//GEN-END:variables
}
